#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/x86_64-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build OpenWrt x86_64

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Openwrt Build Branch'
        required: true
        default: 'immortalwrt-23.05'
        type: choice
        options:
          - 'lede-23.05'
          - 'immortalwrt-23.05'
          - 'immortalwrt-24.10'
      version:
        description: 'Openwrt Build Version'
        required: true
        default: 'SamWrt'
        type: choice
        options:
          - 'SamWrt'
          - 'JimmyWrt'

env:
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  BUILD_BRANCH: ${{ github.event.inputs.branch }}
  BUILD_VER: ${{ github.event.inputs.version }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Decide Branch and Version
      run: |
        case $BUILD_BRANCH in
          immortalwrt-*)
            echo "DEPENDS_UBUNTU=diy/dep/immortalwrt.depends" >> $GITHUB_ENV
            echo "REPO_URL=https://github.com/immortalwrt/immortalwrt" >> $GITHUB_ENV
            echo "REPO_BRANCH=openwrt-${BUILD_BRANCH:(-5)}" >> $GITHUB_ENV
            ;;
          lede-*)
            echo "DEPENDS_UBUNTU=diy/dep/lede.depends" >> $GITHUB_ENV
            echo "REPO_URL=https://github.com/coolsnowwolf/lede" >> $GITHUB_ENV
            echo "REPO_BRANCH=master" >> $GITHUB_ENV
            ;;
        esac
        echo "CONFIG_FILE=diy/cfg/${BUILD_VER,,}.config" >> $GITHUB_ENV
  
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
          root-reserve-mb: 2048
          swap-size-mb: 1024
          # remove-dotnet: 'true'

    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        echo "------------ Check Start ------------"
        echo "DEPENDS_UBUNTU=$DEPENDS_UBUNTU"
        echo "------------- Check End -------------"
        sudo -E apt-get -qq install $(cat $DEPENDS_UBUNTU)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: Clone source code
      run: |
        echo "------------ Check Start ------------"
        echo "REPO_URL=$REPO_URL"
        echo "REPO_BRANCH=$REPO_BRANCH"
        echo "------------- Check End -------------"
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --filter=blob:none openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
    
    - name: Openwrt AutoUpdate
      run: |
        echo "RELEASE_VER=$(date +"Ver%y.%m.%d_%H%M")" >> $GITHUB_ENV
        echo "RELEASE_TAG=$(date +"%Y%m%d_%H%M%S_")$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "RELEASE_REPO=https://github.com/${{ github.repository }}" >> $GITHUB_ENV

    - name: Load custom configuration
      run: |
        [ -e files ] && mv -v files openwrt/files
        echo "------------ Check Start ------------"
        echo "CONFIG_FILE=$CONFIG_FILE"
        echo "------------- Check End -------------"
        [ -e $CONFIG_FILE ] && mv -v $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        #echo "::set-output name=status::success"
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ env.BUILD_VER }}_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        if [[ $BUILD_BRANCH == immortalwrt-* ]]; then
          sed -i 's/immortalwrt/openwrt/g' sha256sums
          for filename in immortalwrt-*; do
            mv -v "$filename" "openwrt-${filename#immortalwrt-}"
          done
        fi
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.BUILD_VER }}_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        touch release.txt
        echo "[Build Branch]: ${{ env.BUILD_BRANCH }}" >> release.txt
        # echo "[Build Version]: ${{ env.BUILD_VER }}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.BUILD_VER }} ${{ env.RELEASE_VER }}
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
        make_latest: true

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 4

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: steps.tag.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
